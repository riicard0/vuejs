Aula 1 a 7: ===============================================================================================

<template>
  <!-- Exemplo 1 = "v-show" -->
  <TheHeader v-show="showHeader" />

  <!-- Exemplo 2 = Variáveis -->
  <div v-show="showName">
    Nome: {{ firstName }}
    <br>
    Sobrenome: {{ lastName }}
    <br>
    Nome completo: {{ firstName + ' ' + lastName }}
  </div>

  <!-- Exemplo 3 = "v-if" -->
  <div v-show="showIf">
    <div v-if="accessLevel === 'admin'">Administrador</div>
    <div v-else-if="accessLevel === 'marketing'">Marketing</div>
    <div v-else>Current User</div>
  </div>

  <!-- Exemplo 4 = "v-for" -->
  <div v-show="showFor">
    <div v-for="(obj, index) in todos" v-bind:key="obj.id" class="todos-item">
      {{ index+=1 }} - {{ obj.title }}
    </div>
  </div>

  <!-- Exemplo 5 = "v-bind" -->
  <div v-show="showBind">
    <img v-bind:src="imgSrc" v-bind:alt="imgAlt">
  </div>

  <!-- Exemplo 6 = "v-bind" com "v-for" e "v-if" -->
  <div v-show="showFor">
    <div v-for="(obj, index) in todos" :key="obj.id" class="todos-item">
      <img v-if="obj.imgSrc" :src="obj.imgSrc">
      {{ index+=1 }} - {{ obj.title }}
    </div>
  </div>

  <!-- Exemplo 7 = "v-bind" com "Class" -->
  <div>
    <h1 :class="{ 'title': true, 'title-home': isHome }">Curso Vue 3</h1>
  </div>

  <!-- Exemplo 8 = "v-bind" -->
  <p :class="['text', 'title', { 'text-home': isHome }]">
    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ad laborum esse distinctio qui quia autem, cum voluptas
    debitis, repellat deserunt nisi beatae hic ipsum neque voluptate. Fugiat debitis cupiditate beatae.
  </p>

  <p :style="styleClass">
    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Ratione, quia?
  </p>

  <!-- Welcome VUE.JS -->
  <img alt="Vue logo" src="./assets/logo.png">
  <HelloWorld msg="Welcome to Your Vue.js App" />
</template>

<script>
import HelloWorld from './components/HelloWorld.vue'
import TheHeader from './components/TheHeader';

export default {
  name: 'App',
  components: {
    HelloWorld,
    TheHeader
  },
  data() {
    return {
      showHeader: false,
      firstName: 'Jon',
      lastName: 'Snow',
      showName: false,
      showIf: false,
      accessLevel: '',
      todos: [
        {
          "userId": 1,
          "id": 1,
          "title": "delectus aut autem",
          "completed": false,
          "imgSrc": 'https://via.placeholder.com/150'
        },
        {
          "userId": 1,
          "id": 2,
          "title": "quis ut nam facilis et officia qui",
          "completed": false,
          "imgSrc": 'https://via.placeholder.com/150'
        },
        {
          "userId": 1,
          "id": 3,
          "title": "fugiat veniam minus",
          "completed": false
        },
        {
          "userId": 1,
          "id": 4,
          "title": "et porro tempora",
          "completed": true
        },
        {
          "userId": 1,
          "id": 5,
          "title": "laboriosam mollitia et enim quasi adipisci quia provident illum",
          "completed": false
        }
      ],
      showFor: false,
      imgSrc: 'https://via.placeholder.com/150',
      imgAlt: 'Foto de Jon Snow',
      showBind: false,
      classVar: 'title',
      isHome: true,
      pClass: 'text',
      styleClass: { 'color': 'aqua', 'background-color': 'black' }
    }
  }
}
</script>

<style>
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2c3e50;
  margin: 60px;
}

.todos-item {
  background: #000;
  margin: 0 0 5px 0;
  padding: 3px 6px;
  color: #fff;
}

.title {
  font-size: 20px;
  color: blue;
}

.title-home {
  font-size: 40px;
  color: green;
}

.text {
  color: yellow;
}

.text-home {
  color: #42b983;
}
</style>

Aula 8: ===================================================================================================

<template>

  <!-- Exemplo 1 -->
  <div>
    <label>Nome:</label>
    <br>
    <input v-model="name" type="text">
    <br>
    {{ name }}
  </div>

  <br>
  <br>

  <!-- Exemplo 2 -->
  <div>
    <label>Sports:</label>
    <br>
    <select v-model="sports">
      <option value="">Escolha</option>
      <option value="Futebol">Futebol</option>
      <option value="Skate">Skate</option>
      <option value="Tenis">Tenis</option>
    </select>
    <br>
    {{ sports }}
  </div>

  <br>
  <br>

  <!-- Exemplo 3 -->
  <div>
    <label>Newsletter</label>
    <br>
    <input v-model="newsletter" type="radio" value="Sim">
    Sim
    <input v-model="newsletter" type="radio" value="Não">
    Não
    <br>
    {{ newsletter }}
  </div>

  <br>
  <br>

  <!-- Exemplo 4 -->
  <div>
    <label>Contrato</label>
    <br>
    <input v-model="contract" type="checkbox" value="Sim">
    Aceita nossos termos.
    <br>
    {{ contract }}
  </div>

  <br>
  <br>

  <!-- Exemplo 5 -->
  <div>
    <label>Contrato</label>
    <br>
    <input v-model="colors" type="checkbox" value="Azul">
    Azul
    <input v-model="colors" type="checkbox" value="Amarelo">
    Amarelo
    <br>
    {{ colors }}
  </div>

</template>

<script>

  export default {
    name: 'App',
    data() {
      return {
        name: 'Jon Snow',
        sports: '',
        newsletter: '',
        contract: '',
        colors: []
      }
    }
  }

</script>

<style>

</style>

Aula 9: ===================================================================================================

<template>
  <!-- Exemplo 1 -->
  <div>
    <button @click.once="onClick()">Enviar</button>
  </div>

  <br>
  <br>

  <!-- Exemplo 2 -->
  <div @mouseover="onMouseOver()" @mouseout="onMouseOut()">
    Mouse Over / Out
  </div>

  <br>
  <br>

  <!-- Exemplo 3 -->
  <div>
    <form action="https://google.com" @submit.prevent.once="onSubmit">
      <button type="submit">Enviar</button>
    </form>
  </div>

  <br>
  <br>

  <!-- Exemplo 4 -->
  <div>
    <input @keyup.enter="onKeyUp" type="text">
  </div>

  <br>
  <br>

</template>

<script>

export default {
  name: 'App',

  data() {
    return {

    }
  },

  methods: {
    onClick() {
      console.log('click');
    },
    onMouseOver() {
      console.log('mouse over');
    },
    onMouseOut() {
      console.log('mouse out');
    },
    onSubmit() {
      console.log('submit');
    },
    onKeyUp() {
      console.log('onKeyUp');
    }
  }
}

</script>

<style>

</style>

Aula 10: ==================================================================================================

<template>
  <div>
    <!-- Exemplo 1 -->
    {{ fullName }}

    <br>
    <br>

    <!-- Exemplo 2 -->
    <h2>Todos em aberto</h2>
    <div v-for="todo in uncompletedTodos" :key="todo.id">
      {{ todo.title }}
    </div>

    <br>

    <h2>Todos completas</h2>
    <div v-for="todo in completedTodos" :key="todo.id">
      {{ todo.title }}
    </div>

    <br>
    <br>

    <h2>Todos</h2>
    <div v-for="todo in todos" :key="todo.id">
      <input v-model="todo.completed" type="checkbox">
      {{ todo.title }}
    </div>

  </div>
</template>

<script>
export default {
  name: 'App',
  components: {

  },
  data() {
    return {
      user: {
        first_name: 'Jon',
        last_name: 'Snow'
      },
      todos: [
        {
          "userId": 1,
          "id": 1,
          "title": "delectus aut autem",
          "completed": false
        },
        {
          "userId": 1,
          "id": 2,
          "title": "quis ut nam facilis et officia qui",
          "completed": false
        },
        {
          "userId": 1,
          "id": 3,
          "title": "fugiat veniam minus",
          "completed": false
        },
        {
          "userId": 1,
          "id": 4,
          "title": "et porro tempora",
          "completed": true
        },
        {
          "userId": 1,
          "id": 5,
          "title": "laboriosam mollitia et enim quasi adipisci quia provident illum",
          "completed": false
        }
      ]
    }
  },
  computed: {
    fullName() {
      return `${this.user.first_name} ${this.user.last_name}`
    },
    uncompletedTodos() {
      return this.todos.filter(todo => !todo.completed);
    },
    completedTodos() {
      return this.todos.filter(todo => todo.completed);
    }
  },
  methods: {

  }
}
</script>

<style>

</style>

Aula 11: ==================================================================================================

<template>

  <div>
    <!-- Exemplo 1 -->
    <input v-model="name" type="text">
    {{ name }}

    <br>
    <br>

    <!-- Exemplo 2 -->
    <select v-model="pageCount">
      <option value="5">5</option>
      <option value="10">10</option>
      <option value="15">15</option>
    </select>
    <br>
    {{ pageCount }}

    <br>
    <br>

    <!-- Exemplo 3 -->
    <input v-model="user.first_name" type="text">
    <br>
    <input v-model="user.last_name" type="text">
    <br>
    {{ user.first_name }} {{ user.last_name }}

  </div>

</template>

<script>
export default {
  name: 'App',
  components: {

  },
  data() {
    return {
      name: '',
      pageCount: 5,
      user: {
        first_name: '',
        last_name: ''
      }
    }
  },
  methods: {
    saveUserName() {
      console.log('Ajax');
      console.log(this.name);
    },
    changePage() {
      console.log('Ajax changePage');
    }
  },
  computed: {

  },
  watch: {
    name(newValue) {
      if (newValue.length >= 3)
        this.saveUserName();
    },
    pageCount() {
      this.changePage();
    },
    user: {
      handler() {
        console.log('User alterado');
      },
      deep: true
    }
  }
}
</script>

<style>

</style>

Aula 12: ==================================================================================================

						APP.VUE

<template>
  <div>
    <TheHeader v-if="showHeader" />

    <h1>hello World</h1>
    <br>
    <br>

    <input v-model="name" type="text">

    {{ name }}
    <br>
    <br>

    <button @click="showHeader = !showHeader">Ativar e desativar Header</button>

  </div>
</template>

<script>
import TheHeader from './components/TheHeader';

export default {
  name: 'App',
  components: {
    TheHeader
  },
  data() {
    return {
      name: 'Jon Snow',
      showHeader: true
    }
  },
  methods: {

  },
  computed: {

  },
  watch: {

  },
  // beforeCreate() {
  //   console.log('>>> beforeCreate');
  //   console.log('Estado: ', this.name);
  //   console.log('DOM: ', this.$el);
  // },
  // created() {
  //   console.log('>>> created');
  //   console.log('Estado: ', this.name);
  //   console.log('DOM: ', this.$el);
  // },
  // beforeMount() {
  //   console.log('>>> beforeMount');
  //   console.log('Estado: ', this.name);
  //   console.log('DOM: ', this.$el);
  // },
  // mounted() {
  //   console.log('>>> mounted');
  //   console.log('Estado: ', this.name);
  //   console.log('DOM: ', this.$el);
  // },
  // beforeUpdate() {
  //   console.log('>>> beforeUpdate');
  // },
  // updated() {
  //   console.log('>>> updated');
  // }
}

</script>

<style>

</style>

						THEHEADER.VUE

<template>
  <header class="header">
    Header
  </header>
</template>

<script>
export default {
  methods: {
    resize($evt) {
      console.log($evt);
    }
  },
  mounted() {
    window.addEventListener('resize', this.resize);
  },
  beforeUnmount() {
    console.log('>>> beforeUnmount');
    window.removeEventListener('resize', this.resize);
  },
  unmounted() {
    console.log('>>> unmounted');
  }
}
</script>

<style>
.header {
  background: #000;
  color: #fff;
}
</style>

Aula 13: ==================================================================================================

						App.vue

<template>
  <div>
    <TheHeader v-if="showHeader">
      <!-- Conteúdo "Title" -->
      <!-- <template v-slot:title>
        Title
      </template> -->

      <!-- Conteúdo "Description" -->
      <template v-slot:description>
        <h2>Description</h2>
      </template>

      <!-- Conteúdo "Default" -->
      Default Slot
    </TheHeader>

  </div>
</template>

<script>
import TheHeader from './components/TheHeader';

export default {
  name: 'App',
  components: {
    TheHeader
  },
  data() {
    return {
      showHeader: true
    }
  },
  methods: {

  },
  computed: {

  },
  watch: {

  },
  // beforeCreate() {
  //   console.log('>>> beforeCreate');
  //   console.log('Estado: ', this.name);
  //   console.log('DOM: ', this.$el);
  // },
  // created() {
  //   console.log('>>> created');
  //   console.log('Estado: ', this.name);
  //   console.log('DOM: ', this.$el);
  // },
  // beforeMount() {
  //   console.log('>>> beforeMount');
  //   console.log('Estado: ', this.name);
  //   console.log('DOM: ', this.$el);
  // },
  // mounted() {
  //   console.log('>>> mounted');
  //   console.log('Estado: ', this.name);
  //   console.log('DOM: ', this.$el);
  // },
  // beforeUpdate() {
  //   console.log('>>> beforeUpdate');
  // },
  // updated() {
  //   console.log('>>> updated');
  // }
}

</script>

<style>

</style>

						TheHeader.vue

<template>
  <header class="header">

    <!-- Conteúdo "Title" -->
    <h1 v-if="$slots.title" class="title">
      <slot name="title" />
    </h1>

    <!-- Conteúdo "Description" -->
    <div class="description">
      <slot name="description" />
    </div>

    <!-- Conteúdo "Default" -->
    <div class="content ">
      <slot />
    </div>

  </header>
</template>

<script>
export default {
  name: 'App',
  mounted() {
    console.log('Elemento: ', this.$el);
    console.log('Slots: ', this.$slots);
  },
}
</script>

<style>
.header {
  background: #000;
  color: #fff;
}
</style>

Aula 14: ==================================================================================================

						App.vue

<template>
  <div class="card">
    Text
  </div>

  <BaseCard />
</template>

<script>
import BaseCard from '@/components/BaseCard.vue';

export default {
  name: 'App',
  components: {
    BaseCard
  },
  data() {
    return {

    }
  },
  methods: {

  },
  computed: {

  },
  watch: {

  },

}

</script>

<style>

</style>

						BaseCard.vue

<template>

  <div class="card">
    Lorem ipsum dolor sit amet consectetur adipisicing elit. Eos, porro. Velit vitae quod soluta eos reprehenderit
    repellendus ab expedita architecto.
  </div>

</template>

<style scoped>
.card {
  background-color: bisque;
  padding: 10px;
  border-radius: 10px;
}
</style>

						style.css

/* .card {
  background-color: bisque;
  padding: 10px;
  border-radius: 10px;
} */

						main.js

import { createApp } from 'vue'
import App from './App.vue'
import '@/assets/css/style.css';

window.app = createApp(App).mount('#app')


Aula 15: ==================================================================================================

						App.vue

<template>
  <div>
    <BaseAlert :variant="variant">
      {{ text }}
    </BaseAlert>
  </div>

</template>

<script>
import BaseAlert from '@/components/BaseAlert.vue';

export default {
  name: 'App',
  components: {
    BaseAlert
  },
  data() {
    return {
      variant: 'danger',
      text: 'Seu formulário foi enviado com sucesso!'
    }
  },
  methods: {

  },
  computed: {

  },
  watch: {

  },

}

</script>

<style>

</style>

						BaseAlert.vue

<template>

  <div :class="baseClass">
    <slot />
  </div>

</template>

<script>
export default {
  props: ['variant', 'test'],

  computed: {
    baseClass() {
      return [
        'alert',
        this.variant ? `alert-${this.variant}` : ``
      ]
    }
  }
}
</script>

<style scoped>
.alert {
  padding: 5px;
  border-radius: 6px;
  color: gray;
  background-color: #ddd;
}

.alert-success {
  background-color: #42b983;
  color: #fff;
}

.alert-danger {
  background-color: red;
  color: #fff;
}
</style>

Aula 16: ==================================================================================================

						App.vue

<template>
  <div>
    <BaseAlert v-if="showAlert" :variant="variant" @close="onClose()">
      {{ text }}
    </BaseAlert>
  </div>
</template>

<script>
import BaseAlert from '@/components/BaseAlert.vue';

export default {
  name: 'App',
  components: {
    BaseAlert
  },
  data() {
    return {
      showAlert: true,
      variant: 'success',
      text: 'Seu formulário foi enviado com sucesso!'
    }
  },
  methods: {
    onClose() {
      this.showAlert = false;
      console.log('on close');
    }
  },
  computed: {

  },
  watch: {

  },

}

</script>

<style></style>

						BaseAlert.vue

<template>
  <div :class="baseClass">
    <slot />

    <button @click="onClick()">
      X
    </button>
  </div>
</template>

<script>
export default {
  props: {
    variant: {
      type: String,
      default: ''
    }
  },

  computed: {
    baseClass() {
      return [
        'alert',
        this.variant ? `alert-${this.variant}` : ``
      ]
    }
  },

  methods: {
    onClick() {
      this.$emit('close');
      console.log('clicou');
    }
  }
}
</script>

<style scoped>
.alert {
  display: flex;
  justify-content: space-between;
  padding: 5px;
  border-radius: 6px;
  color: gray;
  background-color: #ddd;
}

.alert-success {
  background-color: #42b983;
  color: #fff;
}

.alert-danger {
  background-color: red;
  color: #fff;
}
</style>

Aula 17: ==================================================================================================

						arquivo.vue



						arquivo.vue



Aula 18: ==================================================================================================

